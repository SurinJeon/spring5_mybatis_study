<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring5_mybatis_study.mapper.CourseMapper">
	<resultMap type="Course" id="ResCourse">
		<id property="courseId" column="course_id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
	</resultMap>
	
	<sql id="selectSQL">
		select course_id, name, description, start_date, end_date, tutor_id
		  from courses
	</sql>
	
	<sql id="whereSQL">
		<where>
			<if test="tutorId != null">
				AND tutor_id = #{tutorId} <!-- mybatis가 and나 or같은 것도 알아서 상황 맞춰서 생략해서 가져옴 -->
			</if>
			<if test="courseName != null">
				AND name like #{courseName}
			</if>
			<if test="startDate != null">
				AND start_date &gt;= #{startDate}
			</if>
			<if test="endDate != null">
				AND end_date &lt;= #{endDate}
			</if>
		</where>
	</sql>

	<sql id="whereSQLWithCDATA">
		<where>
			<if test="tutorId != null">
				<![CDATA[ AND tutor_id = #{tutorId} ]]>
			</if>
			<if test="courseName != null">
				<![CDATA[ AND name like #{courseName} ]]>
			</if>
			<if test="startDate != null">
				<![CDATA[ AND start_date >= #{startDate} ]]>
			</if>
			<if test="endDate != null">
				<![CDATA[ AND end_date <= #{endDate} ]]>
			</if>
		</where>
	</sql>	
	
	<select id="selectCoursesByCondition" parameterType="map" resultMap="ResCourse">
		<include refid="selectSQL"/>
		<include refid="whereSQL"/>
	</select>
	
												<!-- 이번에는 resultType Course로 해보기  -->
	<select id="selectCaseCourses" parameterType="map" resultType="Course">
		<include refid="selectSQL"/>
		<choose>
			<when test="searchBy == 'Tutor'">
				where tutor_id = #{tutorId}
			</when>
			<when test="searchBy == 'CourseName'">
				where name like #{courseName}
			</when>
			<otherwise>
				where end_date &gt; = now();
			</otherwise>
		</choose>
	</select>
	
	<select id="selectWhereCourses" parameterType="map" resultType="Course">
		<include refid="selectSQL"/>
		<include refid="whereSQLWithCDATA"/>
	</select>
	
	<select id="selectTrimCourses" parameterType="map" resultMap="ResCourse">
		<include refid="selectSQL"/>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="tutorId != null">
				tutor_id = #{tutorId} <!--알아서 where tutor_id = ?  -->
			</if>
			
			<if test="courseName != null">
				AND name like #{courseName} <!-- 알아서 and제거하고 where 붙이기가 가능  -->
			</if>
		</trim>
	</select>
	
	<select id="selectCoursesForeachByTutors" parameterType="map" resultType="Course">
		<include refid="selectSQL"/>
		<if test="tutorIds != null">
			<where>
				tutor_id IN
				<foreach item="tutorId" collection="tutorIds" index="index"
					open="(" close=")" separator=",">
					#{tutorId}
				</foreach> <!-- foreach 돌려서 in (  ,   ,   ) 이렇게 조건절 다는 것 -->
			</where>
		</if>
	</select>
	
	<insert id="insertCourses" parameterType="map">
		insert into courses(course_id, name, description, start_date, end_date, tutor_id) values
		<foreach item="item" collection="tutors" separator=" ," index="index">
			(#{item.courseId}, #{item.name}, #{item.description}, #{item.startDate}, #{item.endDate}, #{item.tutorId})
		</foreach>
	</insert>
	
	<delete id="deleteCourses" parameterType="map">
		delete from courses where course_id in
		<foreach item="courseId" collection="courseIds" index="index" open="(" close=")" separator=",">
			#{courseId}
		</foreach>
	</delete>
	
	<update id="updateSetCourse" parameterType="Course">
		update courses
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="description != null">description=#{description},</if>
			<if test="startDate != null">start_date=#{startDate},</if> 
 			<if test="endDate != null">end_date=#{endDate},</if> 
			<if test="tutorId != null">tutor_id=#{tutorId},</if> 
		</set>
	   	 where course_Id = #{courseId}
	</update>
	
	<!-- transaction -->
	<select id="selectCourseById" resultType="Course">
		select course_id, name, description, start_date, end_date, tutor_id
		  from courses
		 where course_id = #{courseId}
	</select>
	
	<insert id="insertCourse">
		insert into courses(course_id, name, description, start_date, end_date, tutor_id)
		values (#{courseId}, #{name}, #{description}, #{startDate}, #{endDate}, #{tutorId})
	</insert>
	
	<delete id="deleteCourse">
		delete
		  from courses
		 where course_id = #{courseId}
	</delete>
</mapper>

























