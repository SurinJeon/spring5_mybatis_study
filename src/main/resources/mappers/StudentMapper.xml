<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring5_mybatis_study.mapper.StudentMapper">
<sql id="selectSQL">
	select stud_id, name, email, phone, dob 
	  from students
</sql>
<sql id="whereSQL">
	<where>
		<if test="studId != null">
			stud_id = #{studId} <!-- 그 객체의 getStudId() 자동으로 되는게 #{}임 -->
		</if>
	</where>
</sql>
<sql id="where_name_email">
	<where>
		<if test="name != null">
			name = #{name}
		</if>
		<if test="email != null">
			AND email = #{email} <!-- 이 조건이 처음오게 된다면 AND는 자동으로 사라짐  -->
		</if>
	</where>
</sql>
<select id="selectStudentById" parameterType="Student" resultType="Student">
	<include refid="selectSQL"/>
	<include refid="whereSQL"/>
</select>
<resultMap type="Student" id="stdResult">
	<id column="stud_id" property="studId"/>
	<result column="f" property="phone.countryCode"/>
	<result column="m" property="phone.stateCode"/>
	<result column="l" property="phone.number"/>
</resultMap>
<select id="selectStudentByIdWithResultMap" parameterType="Student" resultMap="stdResult">
	select stud_id, name, email, 
		   substring(phone, 1, 3) as f, 
		   substring(phone, 5, 3) as m, 
		   substring(phone, 9, 4) as l, 
		   dob 
      from students 
    <include refid="whereSQL"/>
</select>
<select id="selectStudentByAll" resultType="Student">
	<include refid="selectSQL"/>
</select>
<select id="selectStudentByAllForHashMap" resultType="map">
	<include refid="selectSQL"/>
</select>

<insert id="insertStudent" parameterType="Student">
	insert into students(stud_id, name, email, phone, dob)
	values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
</insert>

<!-- enum 타입 다루기 -->
<insert id="insertEnumStudent" parameterType="Student">
	insert into students(stud_id, name, email,phone, dob, gender) 
	values(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
</insert>

<delete id="deleteStudent">
	delete 
  	  from students
 	<include refid="whereSQL"/>
</delete>

<update id="updateStudent">
	update students
	   set name = #{name}, email = #{email}, phone = #{phone}, dob = #{dob}
	<include refid="whereSQL"/>
</update>

<resultMap type="Student" id="StudentResult">
	<id property="studId" column="stud_id" />
	<result property="name" column="name" />
	<result property="email" column="email" />
	<result property="phone" column="phone" />
	<result property="dob" column="dob" />
</resultMap>

<resultMap type="Student" id="StudentResultAssociation" extends="StudentResult">
	<!-- address 기능 확장해주면 됨 -->
	<association property="address" resultMap="spring5_mybatis_study.mapper.AddressMapper.AddressResult"/>
</resultMap>

<select id="selectStudentByIdAssociation" parameterType="Student" resultMap="StudentResultAssociation">
	select stud_id, name, email, phone, dob, a.addr_id, street, city, state, zip, country
  	  from students s
  	  join addresses a
  	    on s.addr_id = a.addr_id
 	<include refid="whereSQL"></include>
</select>

<select id="selectStudentByMap" parameterType="map" resultMap="StudentResult">
	<include refid="selectSQL"/>
	<include refid="where_name_email"/>
</select>

<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentResult">
	<include refid="selectSQL" />
	<include refid="where_name_email"/>
</select>

<!--ResultSet 처리방식 p150  -->
<select id="selectStudentForMap" parameterType="int" resultMap="StudentResult">
	<include refid="selectSQL"/>
	<include refid="whereSQL"/>
</select>

<!-- update set p185 -->
<update id="updateSetStudent" parameterType="Student">
	update students
	<set>
		<if test="name != null">name=#{name},</if>
		<if test="email != null">email=#{email},</if>
		<if test="phone != null">phone=#{phone},</if>
		<if test="dob != null">dob=#{dob},</if>
	</set>
	<include refid="whereSQL"/>
</update>
</mapper>







































